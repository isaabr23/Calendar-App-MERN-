{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-esp.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","route/PublicRoute.js","route/PrivateRoute.js","route/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActive","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d65cf2e4.chunk.js","sourcesContent":["// Se crean las acciones o las opciones a seguir\r\n// ESTO ES LO QUE SE MUESTRA EN EL REDUX AL REALIZAR X TAREA\r\n// Se comunica con:\r\n/*\r\n    src/actions/auth.js ** [auth]\r\n    src/actions/events.js ** [vent]\r\n    src/actions/ui.js ** [ui]\r\n*/\r\n\r\nexport const types = {\r\n    \r\n    uiOpenModal: '[ui] Abrir modal',\r\n    uiCloseModal: '[ui] Cerrar modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new', // Inicializa todo el proceso de grabacionen BD\r\n    eventAddNew: '[event] Agregar nuevo evento',\r\n    eventClearActiveEvent: '[event] Limpiar active event',\r\n    eventUpdated: '[event] Actualizar Evento',\r\n    eventDeleted: '[event] Eliminar evento',\r\n\r\n    eventLoaded: '[event] Evento cargado',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Registro',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","// Se recibe informacion de ui.js\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n    \r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// Moment es la libreria de las fechas\r\n// {\r\n//     id: 'xxxxx,\r\n//     title: 'Cumpleaños del Jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add( 2, 'hours' ).toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Isaak'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    \r\n    switch ( action.type ) {\r\n        \r\n        // Al dar 1 click se agrega al activeEvent la informacion del evento en el redux/state/tree/activeEvent\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }  \r\n        \r\n            // Al dar 1 click se agrega un nuevo \"events\" con su informacion en el redux/state/tree/events\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]    \r\n            }            \r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n            // Para Editar el evento\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n            \r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        // Borra todo menos el checking que lo cambia a false\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","// Aqui combinamos todos los REDUCERS y se visualizan en redux/state/tree\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n// ToDo: CalendarReducer\r\n\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n// Lo obtenemos de https://github.com/zalmoxisus/redux-devtools-extension#usage\r\n// Es una verificacion que si existen las herramientas lo va a configurar y si no lo deja pasar sin problemas \r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk ) // Para los asincronos\r\n    )\r\n);","// Nos ayudara a colocar el TOKEN en algunos lugares (que lo necesiten) y en algunos lugares no\r\n\r\n// Del archivo .env\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n// endpoint = al que yo quiero llamar * data = lo que quiero postear * metodo\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/ api/ xxxx\r\n\r\n    if ( method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/ api/ xxxx\r\n    const token = localStorage.getItem('token') || ''; // el \" || ''; \" es por si hay algun null en caso de que no haya nada gurdado\r\n\r\n    if ( method === 'GET') {\r\n        return fetch( \r\n            url, {\r\n            method,\r\n            headers: {\r\n                    'x-token': token // token que se encuentra en el localStorage\r\n                }\r\n            });\r\n    } else {\r\n        return fetch( \r\n            url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","// Para convertir Strings a objetos tipo Date()\r\n\r\nimport moment from \"moment\";\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    \r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n        end: moment( e.end ).toDate(),  // Fri Apr 16 2021 14:00:00 GMT-0500 (hora de verano central)\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n}","\r\nimport Swal from 'sweetalert2';\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\n// Se llamara para iniciar el proceso de grabacion en BD\r\n// Lo utilizamos en components/calendar/CalendarModal.js\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            \r\n            // endpoint=event (localhost:4000/api/**events**)\r\n            const resp = await fetchConToken( 'events', event, 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event)\r\n                dispatch( eventAddNew( event ) );\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n// Agregar un nuevo evento\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n// \"Activar\" un evento\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n// Desactvar un evento\r\nexport const eventClearActive = ( ) => ({ type: types.eventClearActiveEvent });\r\n\r\n// Inicia la grabacion de la actualizacion del evento\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            // console.log(event)\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' ); \r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire( 'Error', body.msg, 'error' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n// Se dispara cuando ya se actualiza la nota\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n// Se dispara la accion de borrar\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' ); \r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n                Swal.fire('Eliminado', body.msg, 'success');\r\n            } else {\r\n                Swal.fire( 'Error', body.msg, 'error' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n// Borrar un evento\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\n// Obtiene todos los eventos usando el endpoint que estan en la BD\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        \r\n        try {\r\n            \r\n            const resp = await fetchConToken( 'events' );\r\n            const body = await resp.json();\r\n            // console.log(body);\r\n\r\n            const events = prepareEvents( body.eventos);\r\n\r\n            // console.log(events)\r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n// Lo mandamos a calendarReducer\r\n// dispara la accion al reducer de los eventos (eventStartLoading)\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        // Se guarda el token en el localStorage y se guarda el registro de cuando fue creado el token (token-init-date)\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            // Establece el uid y name, manda la instruccuin al reducer (authReducer.js) hasta abajo creamos el Login()\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            // Manda mensaje de error cuando no exista el email en la bd y el body.msg es el texto de la BD\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        // Se guarda el token en el localStorage y se guarda el registro de cuando fue creado el token (token-init-date)\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            // Establece el uid y name, manda la instruccuin al reducer (authReducer.js) hasta abajo creamos el Login()\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            // Manda mensaje de error cuando no exista el email en la bd y el body.msg es el texto de la BD\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n        // Se guarda el token en el localStorage y se guarda el registro de cuando fue creado el token (token-init-date)\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            // Establece el uid y name, manda la instruccuin al reducer (authReducer.js) hasta abajo creamos el Login()\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ \r\n    type: types.authCheckingFinish \r\n});\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear(); // Eliminamos el localStorage (token/token-init-date)\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n});","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({ \r\n        lEmail: 'Isaac@g.com',\r\n        lPassword: '123456'\r\n     });\r\n\r\n     const [ formRegisterValues, handleRegisterInputChange ] = useForm({ \r\n        rName: 'Andrea',\r\n        rEmail: 'andrea@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n     });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        // startLogin es la accion y requiere email y password se comunica con auth.js (acciones)\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth ); // Extraemos el name del STORE con el useSelector\r\n\r\n    // Dispara la funcion startLogout para eliminar todo y solo dejar el checking: false\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","// Ayuda a que se vea en español\r\n\r\nexport const messages = {\r\n  \r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","// Colocamos el titulo y nombre en la tarea/recordatorio\r\n\r\n\r\nimport React from 'react';\r\n\r\n// Recibe toda la informacion del evento\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","// Se manda informacion al uiReducer\r\n\r\nimport { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({ \r\n    type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({ \r\n    type: types.uiCloseModal,\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root'); // Es el root del index\r\n\r\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours'); // minutos/segundos los redonde a cero \r\nconst nowPlus1 = now.clone().add( 1, 'hours'); // clona el \"now\" y le agrega una hora mas\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Para estar pendiente del STORE y se lo asignamos a *<Modal 'isOpen'*\r\n    const { modalOpen } = useSelector( state => state.ui );  // Observaremos el estado del 'ui' ** y extraemos el 'modalOpen con destructuracion\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    // Limpia el formulario al crear uno nuevo  y toma los valores de initEvent y en closeModal tambien se llama a initEvent\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    // Al dar doble click nos muestra el evento completo con informacion\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    // Al dar cick fuera del formulario (modal) se ocultara por que modalOpen estara en FALSE\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActive() ); // limpiar modal cuando se cierra\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    // Cambiamos el estado en components/hooks/state tambien de handleStartDateChange y handleEndDateChange\r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    // Para obtener la informacion del formulario\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd )) {\r\n            Swal.fire('Error', 'La fecha debe ser mayor a la fecha de inicio', 'error');\r\n            return;\r\n        }\r\n\r\n        // Si es el texto menor o igual  2 letras marca error\r\n        if ( title.trim().length <= 2 ) {\r\n            Swal.fire('Upss!', 'Por favor escribe el nombre del evento mas especifico', 'warning');\r\n            return setTitleValid( false );\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            // Aqui estamos actualizando/editandolo\r\n            dispatch( eventStartUpdate( formValues ) )\r\n            \r\n        } else {\r\n            // Aqui estamos creando un nuevo evento\r\n            // Se realiza la grabacion en bd\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n\r\n        setTitleValid( true );\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen } //se muestra o no el \"modal\"\r\n          onRequestClose={closeModal} \r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 } // que se cierre en 200ms (efecto)\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n        <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n        <hr />\r\n        <form \r\n            className=\"container\"\r\n            onSubmit={ handleSubmitForm }\r\n        >\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n                <DateTimePicker\r\n                    onChange={ handleStartDateChange }\r\n                    value={ dateStart }\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora fin</label>\r\n                <DateTimePicker\r\n                    onChange={ handleEndDateChange }\r\n                    value={ dateEnd }\r\n                    minDate={ dateStart } // Dice que dateStart debe ser menor siempre que dateEnd (VALIDACION)\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <label>Titulo y notas</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className={ `form-control ${ !titleValid && 'is-invalid' } ${ titleValid && 'is-valid' }` } // Condicional del titulo si es valido o no\r\n                    placeholder=\"Título del evento\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Notas\"\r\n                    rows=\"5\"\r\n                    name=\"notes\"\r\n                    value={ notes }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n            </div>\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n\r\n        </form>\r\n        </Modal>\r\n    )\r\n}","//  AddNewFab - Agregar un Floor action bottom boton flotante\r\n\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Se lanza el dispatch cuando se da click en el icono de agregar\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n// Se instalan las dos librerias \r\n// npm i react-big-calendar *Para el calendario* / https://www.npmjs.com/package/react-big-calendar ** ir a Homepage (https://github.com/jquense/react-big-calendar#readme) y luego *DEMO and Docs*\r\n// npm i moment *Para Horas/Fechas *\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-esp';\r\nimport { CalendarEvent } from './CalendarEvent';\r\n\r\n// Son los estilos del calendar * Getting Started (http://jquense.github.io/react-big-calendar/examples/index.html)\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es'; // Libreria de moment español\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es'); // Cambia el idioma de Mes y dias de la plantilla a español\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Extraemos los datos de calendar (en el redux) y de events para mostralo en pantalla \r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n\r\n    // Extraemos el uid del redux para cambiar de color cuando sean usuarios diferentes\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    // Al recargar la pagina no se pierde el lugar donde estabamos **onViewChange** nos ayuda\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [ dispatch ])\r\n\r\n    // Para crear el evento al hacer doble click en alguna tarea\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e);\r\n        dispatch( uiOpenModal() ); // Al dar doble click se abre el modal (formulario)\r\n    }\r\n\r\n    // Selecciona el evento para editarlo o borrarlo\r\n    const onSelectEvent = (e) => {\r\n        // console.log(e);\r\n        dispatch( eventSetActive( e ) );\r\n    }\r\n\r\n    // Nos dice en que pagina estamos (week/day/agenda/month)\r\n    const onViewChange = (e) => {\r\n        // console.log(e);\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    // Para limpiar el evento en redux al dar click fuera del evento y se quita el boton de borrar\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActive() )\r\n    }\r\n    \r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        const style = {\r\n            // si el uid = al usuario que lo creo estara en azul y si no estara de otro color\r\n            backgroundColor: ( uid === event.user._id ) ? '#F45A35' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            {/* lo sacamos de http://jquense.github.io/react-big-calendar/examples/index.html */}\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }   \r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages } // Para que se vea todo en Español\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }   // Para deseleccionar el evento al dar click fuera del evento\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                ( activeEvent ) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","// Video 191\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n// Se recibiran varios elementos en las props **isAuthenticated (para saber si esta autenticado), component: Component (para saber q persona se renderizo), ...rest (todos los demas argumentos como el exact, path, etc...)** \r\nexport const PublicRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n }) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            ) }\r\n        />    \r\n    )\r\n}\r\n\r\n// Ponemos proptypes requeridos para que funcione el PrivateRoute\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","// Video 191\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n// Se recibiran varios elementos en las props \r\n// **isAuthenticated (para saber si esta autenticado), component: Component (para saber q persona se renderizo), ...rest (todos los demas argumentos como el exact, path, etc...)** \r\nexport const PrivateRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n }) => {\r\n\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            ) }\r\n        />    \r\n    )\r\n}\r\n\r\n// Ponemos proptypes requeridos para que funcione el PrivateRoute\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // useSelector jalamos informacion del STORE en este caso es auth del estado (state.auth) y obtenemos el checking que esta en true y luego false al loguearse video 365\r\n    // extraemos tambien el uid el cual regresara un null/string por lo cual colocamos ** !!uid ** si existe uid = true / si no existe = null y con ello sabremos si es ruta privada/publica\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return ( <h5> Espere... </h5> );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './route/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}